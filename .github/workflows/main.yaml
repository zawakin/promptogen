name: Python CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10.x, 3.11]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests with pytest
      run: |
        poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=promptgen tests/ | tee pytest-coverage.txt

    - name: Pytest coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml

    - name: Lint with flake8
      run: |
        poetry run flake8 promptgen

    - name: Test with mypy
      run: |
        poetry run mypy promptgen

    - name: Check code formatting with Black
      run: |
        poetry run black --check promptgen

    - name: Check import formatting with isort
      run: |
        poetry run isort --check-only promptgen
