{
    "name": "PromptExampleCreator",
    "description": "Create an random-like example from the given prompt. Please add examples with scattered inputs and outputs in semantic space.",
    "input_parameters": [
        {
            "name": "prompt",
            "description": "prompt"
        }
    ],
    "output_parameters": [
        {
            "name": "example",
            "description": "detailed example of the prompt. Please add an example with scattered inputs and outputs in semantic space. Specific example is better than general examples."
        }
    ],
    "template": {
        "input": {
            "prompt": {
                "name": "sample-prompt",
                "description": "A sample prompt.",
                "input_parameters": [
                    {
                        "name": "input1",
                        "description": "The first input parameter."
                    },
                    {
                        "name": "input2",
                        "description": "The second input parameter."
                    }
                ],
                "output_parameters": [
                    {
                        "name": "output1",
                        "description": "The first output parameter."
                    },
                    {
                        "name": "output2",
                        "description": "The second output parameter."
                    }
                ],
                "template": {
                    "input": {
                        "input1": "Hello, world!",
                        "input2": "Hello, world!"
                    },
                    "output": {
                        "output1": "Hello, world!",
                        "output2": "Hello, world!"
                    }
                },
                "examples": [
                    {
                        "input": {
                            "input1": "Hello, world!",
                            "input2": "Hello, world!"
                        },
                        "output": {
                            "output1": "Hello, world!",
                            "output2": "Hello, world!"
                        }
                    },
                    {
                        "input": {
                            "input1": "Hello, world!",
                            "input2": "Hello, world!"
                        },
                        "output": {
                            "output1": "Hello, world!",
                            "output2": "Hello, world!"
                        }
                    }
                ]
            }
        },
        "output": {
            "example": {
                "input": {
                    "input_1": "example input 1"
                },
                "output": {
                    "output_1": "example output 1"
                }
            }
        }
    },
    "examples": [
        {
            "input": {
                "prompt": {
                    "name": "TextCategorizer",
                    "description": "Categorize the given text",
                    "input_parameters": [
                        {
                            "name": "text",
                            "description": "The text to be categorized"
                        },
                        {
                            "name": "categories",
                            "description": "The categories to categorize the text into"
                        }
                    ],
                    "output_parameters": [
                        {
                            "name": "category",
                            "description": "The category the text belongs to"
                        },
                        {
                            "name": "found",
                            "description": "Whether the category was found in the text"
                        }
                    ],
                    "template": {
                        "input": {
                            "text": "text",
                            "categories": [
                                "category 1",
                                "category 2"
                            ]
                        },
                        "output": {
                            "category": "category 1",
                            "found": true
                        }
                    },
                    "examples": []
                }
            },
            "output": {
                "example": {
                    "input": {
                        "text": "A recent study shows that regular exercise can help improve cognitive function in older adults.",
                        "categories": [
                            "Health",
                            "Science",
                            "Technology"
                        ]
                    },
                    "output": {
                        "category": "Health",
                        "found": true
                    }
                }
            }
        },
        {
            "input": {
                "prompt": {
                    "name": "PythonCodeGenerator",
                    "description": "Generate Python code based on the given task",
                    "input_parameters": [
                        {
                            "name": "task",
                            "description": "The task for which Python code needs to be generated"
                        }
                    ],
                    "output_parameters": [
                        {
                            "name": "reason",
                            "description": "Reason for the generated Python code"
                        },
                        {
                            "name": "code",
                            "description": "Python code generated to complete the task"
                        }
                    ],
                    "template": {
                        "input": {
                            "task": "task"
                        },
                        "output": {
                            "reason": "reason",
                            "code": "code"
                        }
                    },
                    "examples": []
                }
            },
            "output": {
                "example": {
                    "input": {
                        "task": "Create a function that calculates the factorial of a number"
                    },
                    "output": {
                        "reason": "Factorial function is a common use case in Python programming",
                        "code": "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)"
                    }
                }
            }
        }
    ]
}